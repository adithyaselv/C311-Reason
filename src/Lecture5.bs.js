// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function charToNumEnv(y) {
  switch (y) {
    case "A" :
        return {
                TAG: /* Num */0,
                _0: 1
              };
    case "B" :
        return {
                TAG: /* Num */0,
                _0: 2
              };
    case "C" :
        return {
                TAG: /* Num */0,
                _0: 3
              };
    case "D" :
        return {
                TAG: /* Num */0,
                _0: 4
              };
    default:
      return {
              TAG: /* Num */0,
              _0: 42
            };
  }
}

function extendEnv(x, v, env, y) {
  if (y === x) {
    return v;
  } else {
    return Curry._1(env, y);
  }
}

function valof(exp, env) {
  switch (exp.TAG | 0) {
    case /* Var */0 :
        return Curry._1(env, exp._0);
    case /* Num */1 :
        return {
                TAG: /* Num */0,
                _0: exp._0
              };
    case /* Lambda */2 :
        var body = exp._1;
        var s = exp._0;
        return {
                TAG: /* Closure */1,
                _0: (function (y) {
                    return valof(body, (function (param) {
                                  return extendEnv(s, y, env, param);
                                }));
                  })
              };
    case /* App */3 :
        var clos = valof(exp._0, env);
        switch (clos.TAG | 0) {
          case /* Closure */1 :
              return Curry._1(clos._0, valof(exp._1, env));
          case /* Num */0 :
          case /* Error */2 :
              return {
                      TAG: /* Error */2,
                      _0: "Invalid expression"
                    };
          
        }
    
  }
}

console.log(valof({
          TAG: /* App */3,
          _0: {
            TAG: /* Lambda */2,
            _0: "x",
            _1: {
              TAG: /* Var */0,
              _0: "B"
            }
          },
          _1: {
            TAG: /* Num */1,
            _0: 46
          }
        }, charToNumEnv));

console.log(valof({
          TAG: /* App */3,
          _0: {
            TAG: /* Lambda */2,
            _0: "x",
            _1: {
              TAG: /* Var */0,
              _0: "x"
            }
          },
          _1: {
            TAG: /* Num */1,
            _0: 46
          }
        }, charToNumEnv));

console.log(valof({
          TAG: /* App */3,
          _0: {
            TAG: /* Lambda */2,
            _0: "x",
            _1: {
              TAG: /* Var */0,
              _0: "y"
            }
          },
          _1: {
            TAG: /* Num */1,
            _0: 46
          }
        }, charToNumEnv));

console.log(valof({
          TAG: /* App */3,
          _0: {
            TAG: /* App */3,
            _0: {
              TAG: /* Lambda */2,
              _0: "x",
              _1: {
                TAG: /* Lambda */2,
                _0: "y",
                _1: {
                  TAG: /* Var */0,
                  _0: "y"
                }
              }
            },
            _1: {
              TAG: /* Num */1,
              _0: 46
            }
          },
          _1: {
            TAG: /* Num */1,
            _0: 1729
          }
        }, charToNumEnv));

exports.charToNumEnv = charToNumEnv;
exports.extendEnv = extendEnv;
exports.valof = valof;
/*  Not a pure module */
