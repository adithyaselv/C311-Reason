// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function plus(x, y) {
  if (y !== 0) {
    return 1 + plus(x, y - 1 | 0) | 0;
  } else {
    return x;
  }
}

function star(x, y) {
  if (y !== 0) {
    return x + star(x, y - 1 | 0) | 0;
  } else {
    return 0;
  }
}

function exp(x, y) {
  if (y !== 0) {
    return Math.imul(x, exp(x, y - 1 | 0));
  } else {
    return 1;
  }
}

function doubleExp(x, y) {
  if (y !== 0) {
    return exp(x, doubleExp(x, y - 1 | 0));
  } else {
    return 1;
  }
}

function g(_i, x, _y) {
  while(true) {
    var y = _y;
    var i = _i;
    if (i === 0) {
      if (y !== 0) {
        return 1 + g(0, x, y - 1 | 0) | 0;
      } else {
        return x;
      }
    }
    if (i !== 1) {
      if (y === 0) {
        return 1;
      }
      _y = g(i, x, y - 1 | 0);
      _i = i - 1 | 0;
      continue ;
    }
    if (y === 0) {
      return 0;
    }
    _y = g(i, x, y - 1 | 0);
    _i = i - 1 | 0;
    continue ;
  };
}

function map(ls, f) {
  if (ls) {
    return Pervasives.$at({
                hd: Curry._1(f, ls.hd),
                tl: /* [] */0
              }, map(ls.tl, f));
  } else {
    return /* [] */0;
  }
}

console.log("Double Exp of 2 4 : " + String(doubleExp(2, 4)));

console.log("Addition of 2 4 : " + String(g(0, 2, 4)));

console.log("Multiplication of 2 4 : " + String(g(1, 2, 4)));

console.log("Exponential 2^4 : " + String(g(2, 2, 4)));

console.log("Double Exp using G of 2^^4 : " + String(doubleExp(2, 4)));

console.log("List map example [1,2,3,4] : ");

console.log($$Array.of_list(map({
              hd: 1,
              tl: {
                hd: 2,
                tl: {
                  hd: 3,
                  tl: {
                    hd: 4,
                    tl: /* [] */0
                  }
                }
              }
            }, (function (x) {
                return Math.imul(x, x);
              }))));

exports.plus = plus;
exports.star = star;
exports.exp = exp;
exports.doubleExp = doubleExp;
exports.g = g;
exports.map = map;
/*  Not a pure module */
